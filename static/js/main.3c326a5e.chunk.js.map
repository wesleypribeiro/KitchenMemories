{"version":3,"sources":["images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/shareIcon.svg","logo.png","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","store/actions/user.actions.js","pages/Login/Login.js","components/Footer/index.js","helpers/index.js","components/SearchBar.js","components/Header/index.js","components/RecipeCard.js","pages/Comidas.js","pages/Bebidas.js","pages/Explorar.js","pages/ComidasIngredientes.js","pages/BebidasIngredientes.js","pages/ExplorarPorArea.js","pages/ExplorarComidas.js","pages/ExplorarBebidas.js","components/CardIngredientsDrinks.js","helpers/drinkApi.js","pages/ExplorarBebidasIngredientes.js","components/CardIngredientsFoods.js","helpers/ingredientsApi.js","pages/ExplorarComidasIngredientes.js","pages/Perfil/index.js","components/FilterButtons.js","components/DoneAndFavoriteCards/index.js","store/actions/favoriteRecipes.actions.js","pages/ReceitasFeitas.js","pages/ReceitasFavoritas.js","store/actions/categories.actions.js","store/actions/meals.action.js","store/actions/drinks.actions.js","pages/NotFound.js","pages/ReceitasEmProgresso.js","components/RecomendationCard.js","components/IngredientList.js","components/GenericoComidas.js","components/GenericoBebidas.js","App.js","serviceWorker.js","store/reducers/user.reducer.js","store/reducers/categories.reducer.js","store/reducers/meals.reducer.js","store/reducers/drinks.reducer.js","store/reducers/favoriteRecipes.reducer.js","store/store.js","store/reducers/example.reducer.js","index.js"],"names":["module","exports","login","email","type","payload","Login","state","Email","senha","buttonDisabled","logado","bind","change","event","target","name","value","this","setState","test","length","props","history","setEmail","objUser","className","src","logo","alt","width","placeholder","data-testid","onChange","Button","disabled","onClick","localStorage","setItem","JSON","stringify","push","Component","connect","dispatch","Footer","Navbar","fixed","to","drinkIcon","exploreIcon","mealIcon","map","item","fetchFoodApiByName","a","fetch","then","response","json","meals","fetchFoodApiByLetter","letter","fetchFoodApiById","id","fetchFoodApiByIngredient","ingredient","fetchFoodRecomendation","sixMeals","slice","fetchDrinkApiById","drinks","fetchDrinkRecomendation","sixDrinks","addFoodToFavorite","recipe","foodOrDrink","strMealThumb","strMeal","strCategory","idMeal","strDrinkThumb","strDrink","idDrink","strArea","strAlcoholic","favoriteRecipes","parse","getItem","isFavorite","find","e","removed","filter","newFavorite","area","category","alcoholicOrNot","image","newList","removeFromFavorite","alreadyOnFavorite","some","getIngredientList","Object","keys","reduce","acc","currentKey","includes","measure","replace","quantity","recipeIsDone","doneRecipes","continueRecipe","inProgessKey","continueRecipes","isFavoriteRecipe","fetchAPIFood","console","log","fetchListArea","request","fetchFoodsAreaName","getRandomDrink","drink","getRandomFood","food","SearchBar","array","input","radio","rotaComida","rotaBebida","foodAPIngredientes","APIcomidas","APIbebidas","twelveCards","location","pathname","alert","endPoint","arr","newArr","i","undefined","Form","Control","Check","label","index","key","SearchBarLocation","withRouter","Header","hidden","title","invertHidden","Container","profileIcon","searchIcon","HeaderLocation","RecipeCard","idRecipeCard","idImg","srcImg","idCardName","mealName","Image","thumbnail","React","Comidas","selectedCategory","categoryName","handleClick","Beef","Breakfast","Chicken","Dessert","Goat","recipesCategories","categories","size","Row","lg","md","meal","Bebidas","ordinaryDrink","cocktail","milkFloatShake","otherUnknown","cocoa","drinksCategories","Explorar","fluid","block","ComidasIngredientes","BebidasIngredientes","ExploreByArea","useState","foods","setFoods","apiListFood","setApiListFood","country","setCountry","getApiCategoriesFood","getFoodsArea","useEffect","style","ExploreFoods","randomFood","setRandomFood","handleGetFood","result","ExploreDrinks","randomDrink","setRandomDrink","handleGetDrink","CardIngredientsDrinks","useHistory","searchRecipes","height","cursor","URL","ENDPOINT","listIngredient","requestResponse","getDrinks","DrinkIngredients","ingredients","setIngrediets","fetchIngredients","strIngredient1","isMeal","CardIngredientsFoods","getIngredients","FoodIngredientes","getMeals","strIngredient","Perfil","routeTo","setRoute","route","userEmailLocalStorage","clear","user","FilterButtons","changeFilter","DoneAndFavoriteCards","updateFavoriteRecipes","updateFavoriteList","updateFavoriteItems","curr","currentRecipe","fetchFoodOrDrink","comida","bebida","comidas","bebidas","recipes","share","favoriteRecipe","element","obj","doneDate","tags","tag","shareIcon","favoriteThisItem","Number","fav","notFav","defaultProps","favorites","ReceitasFeitas","displayShareMesage","copy","setTimeout","ReceitasFavoritas","list","fetchCategories","data","fetchMeals","fetchDrinks","NotFound","ReceitasEmProgresso","ingredientList","disable","isDone","fetchDrinkRecipe","fetchFoodRecipe","handleChangeChecked","fetchApi","updateStorage","isDisable","checked","link","window","href","match","params","drinkId","storage","arrIngredientes","values","crr","foodId","variavel","done","thumb","h1","htmlFor","inputCards","RecomendationCard","carouselIndex","handleCarousel","selectedIndex","recomendations","redirectToPage","Carousel","activeIndex","onSelect","recomendation","Item","Card","Img","variant","Body","Title","Subtitle","IngredientList","GenericoComidas","redirectTo","currentVideo","isThisRecipeDone","continueThisRecipe","youtubeVideo","strYoutube","finishedRechipe","alreadyStartedThisRecipe","page","strInstructions","GenericoBebidas","App","exact","path","component","ExpÄºorar","ExplorarPorArea","ExplorarComidas","ExplorarBebidas","ExplorarBebidasIngredientes","ExplorarComidasIngredientes","rota","fetchCategoriesAction","fetchMealsAction","fetchDrinksAction","Boolean","hostname","INITIAL_STATE","initialState","reducer","action","rootReducer","combineReducers","example","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c326a5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.96981abd.png\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","export default function login(email) {\n  return {\n    type: 'USER_LOGIN',\n    payload: email,\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport login from '../../store/actions/user.actions';\nimport logo from '../../logo.png';\nimport './style.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Email: '',\n      senha: '',\n      buttonDisabled: true,\n    };\n    this.logado = this.logado.bind(this);\n    this.change = this.change.bind(this);\n  }\n\n  change(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value }, this.logado);\n  }\n\n  logado() {\n    const { Email, senha } = this.state;\n    const rgx = /\\S+@\\S+\\.\\S+/;\n    const testeEmail = rgx.test(Email);\n    const mininoDigitos = 6;\n    if (testeEmail && senha.length > mininoDigitos) {\n      this.setState({\n        buttonDisabled: false,\n      });\n    } else {\n      this.setState({\n        buttonDisabled: true,\n      });\n    }\n  }\n\n  render() {\n    const { history, setEmail } = this.props;\n    const { Email, senha, buttonDisabled } = this.state;\n    const objUser = { email: Email };\n    return (\n      <div className=\"d-flex  flex-column p-2 bd-highlight color\">\n        <div className=\"d-flex justify-content-center flex-row-reverse bd-highlight\">\n          <img src={ logo } className=\"logo\" alt=\"logo kitchen memories\" width=\"250px\" />\n        </div>\n        <div className=\"d-flex mb-3 justify-content-center flex-row-reverse bd-highlight\">\n          <h1>Bem Vindo</h1>\n        </div>\n        <div className=\"d-flex flex-column bd-highlight\">\n          <div className=\"d-flex p-2 bd-highlight\">\n            <input\n              className=\"ml-2 mr-3 input-group mb-3 border border-dark login-input\"\n              type=\"text\"\n              name=\"Email\"\n              value={ Email }\n              placeholder=\"e-mail\"\n              data-testid=\"email-input\"\n              onChange={ (event) => this.change(event) }\n            />\n          </div>\n          <div className=\"d-flex p-2 bd-highlight\">\n            <input\n              className=\"ml-2  mr-3 mb-5 border border-dark login-input\"\n              type=\"text\"\n              name=\"senha\"\n              value={ senha }\n              placeholder=\"senha\"\n              data-testid=\"password-input\"\n              onChange={ (event) => this.change(event) }\n            />\n          </div>\n\n          <Button\n            className=\"btn btn-dark btn-login\"\n            type=\"button\"\n            data-testid=\"login-submit-btn\"\n            disabled={ buttonDisabled }\n            onClick={ () => {\n              localStorage.setItem('mealsToken', 1);\n              localStorage.setItem('cocktailsToken', 1);\n              localStorage.setItem('user', JSON.stringify(objUser));\n              setEmail(objUser.email);\n              history.push('/comidas');\n            } }\n          >\n            Entrar\n          </Button>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEmail: (email) => dispatch(login(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  history: PropTypes.shape.isRequired,\n  setEmail: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../../images/drinkIcon.svg';\nimport exploreIcon from '../../images/exploreIcon.svg';\nimport mealIcon from '../../images/mealIcon.svg';\nimport './styles.css';\n\nclass Footer extends Component {\n  render() {\n    const { className } = this.props;\n    const arr = [];\n    return (\n      <Navbar fixed=\"bottom\" className={className} data-testid=\"footer\">\n        <Link className=\"footer-icons\" to=\"/bebidas\">\n          <img src={ drinkIcon } alt=\"drinkIcon\" data-testid=\"drinks-bottom-btn\" />\n        </Link>\n        <Link className=\"footer-icons\" to=\"/explorar\">\n          <img\n            src={ exploreIcon }\n            alt=\"searchIcon\"\n            data-testid=\"explore-bottom-btn\"\n          />\n        </Link>\n        <Link className=\"footer-icons\" to=\"/comidas\">\n\n          <img\n            src={ mealIcon }\n            alt=\"mealIcon\"\n            data-testid=\"food-bottom-btn\"\n          />\n        </Link>\n        {arr.map((item) => item)}\n      </Navbar>\n    );\n  }\n}\n\nexport default Footer;\n","export async function fetchFoodApiByName(name) {\n  const { meals } = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`)\n    .then((response) => response.json());\n  return meals;\n}\n\nexport async function fetchFoodApiByLetter(letter) {\n  const { meals } = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`)\n    .then((response) => response.json());\n  return meals;\n}\n\nexport async function fetchFoodApiById(id) {\n  if (!id) return;\n  const { meals } = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then((response) => response.json());\n  return meals[0];\n}\n\nexport async function fetchFoodApiByIngredient(ingredient) {\n  const { meals } = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient}`)\n    .then((response) => response.json());\n  return meals;\n}\n\nexport async function fetchFoodRecomendation() {\n  const { meals } = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n    .then((response) => response.json());\n  const MIN = 0;\n  const MAX = 6;\n  const sixMeals = [...meals].slice(MIN, MAX);\n  return [...sixMeals];\n}\n\nexport async function fetchDrinkApiByName(name) {\n  const { drinks } = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`)\n    .then((response) => response.json());\n  return drinks;\n}\n\nexport async function fetchDrinkApiByLetter(letter) {\n  const { drinks } = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${letter}`)\n    .then((response) => response.json());\n  return drinks;\n}\n\nexport async function fetchDrinkApiById(id) {\n  const { drinks } = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then((response) => response.json());\n  return drinks[0];\n}\n\nexport async function fetchDrinkApiByIngredient(ingredient) {\n  const { drinks } = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${ingredient}`)\n    .then((response) => response.json());\n  return drinks;\n}\n\nexport async function fetchDrinkRecomendation() {\n  const { drinks } = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n    .then((response) => response.json());\n  const MIN = 0;\n  const MAX = 6;\n  const sixDrinks = [...drinks].slice(MIN, MAX);\n  return [...sixDrinks];\n}\n\nexport function addFoodToFavorite(recipe, foodOrDrink) {\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    idMeal,\n    strDrinkThumb,\n    strDrink,\n    idDrink,\n    strArea,\n    strAlcoholic,\n  } = recipe;\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favoriteRecipes) {\n    const isFavorite = favoriteRecipes\n      .find((e) => e.id === recipe.idMeal || e.id === idDrink);\n    if (isFavorite) {\n      const removed = favoriteRecipes.filter((e) => e.id !== isFavorite.id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(removed));\n      return false;\n    }\n  }\n  const newFavorite = {\n    id: idMeal || idDrink,\n    type: foodOrDrink,\n    area: strArea || '',\n    category: strCategory,\n    alcoholicOrNot: strAlcoholic || '',\n    name: strMeal || strDrink,\n    image: strMealThumb || strDrinkThumb,\n  };\n  if (favoriteRecipes) {\n    const newList = [...favoriteRecipes, newFavorite];\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newList));\n    return true;\n  }\n  localStorage.setItem('favoriteRecipes', JSON.stringify([newFavorite]));\n  return true;\n}\n\nexport function removeFromFavorite(id) {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const alreadyOnFavorite = favoriteRecipes.some((e) => e.id === id);\n  const removed = favoriteRecipes.filter((e) => e.id !== id);\n  localStorage.setItem('favoriteRecipes', JSON.stringify(removed));\n  return alreadyOnFavorite;\n}\n\nexport function getIngredientList(recipe) {\n  return Object.keys(recipe).reduce((acc, currentKey) => {\n    if (recipe[currentKey] && currentKey.includes('strIngredient')) {\n      const measure = currentKey.replace('strIngredient', 'strMeasure');\n      return { ...acc,\n        [currentKey]: {\n          item: recipe[currentKey],\n          quantity: recipe[measure],\n        } };\n    }\n    return acc;\n  },\n  {});\n}\n\nexport function recipeIsDone(id) {\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!id || !doneRecipes) return false;\n  const checkIfDone = doneRecipes.some((e) => e.id === id);\n  return checkIfDone;\n}\n\nexport function continueRecipe(id, foodOrDrink) {\n  const continueRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (!id || !foodOrDrink || !continueRecipes) return false;\n  let inProgessKey;\n  if (foodOrDrink === 'bebidas') {\n    inProgessKey = 'cocktails';\n  } else {\n    inProgessKey = 'meals';\n  }\n  return Object.keys(continueRecipes[inProgessKey]).some((e) => e === id);\n}\n\nexport function isFavoriteRecipe(id) {\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (!id || !favoriteRecipes) return false;\n  return favoriteRecipes.some((e) => e.id === id);\n}\n\nconst URLFood = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst URLList = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n\nexport const fetchAPIFood = async () => {\n  try {\n    const response = await fetch(URLFood);\n    const { meals } = await response.json();\n    return meals;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchListArea = async () => {\n  try {\n    const request = await fetch(URLList);\n    const { meals } = await request.json();\n    return meals;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFoodsAreaName = async (name) => {\n  try {\n    const request = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${name}`);\n    const { meals } = await request.json();\n    return meals;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRandomDrink = async () => {\n  try {\n    const URL = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n    const drink = await fetch(URL).then((response) => response.json());\n    return drink;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRandomFood = async () => {\n  try {\n    const URL = 'https://www.themealdb.com/api/json/v1/1/random.php';\n    const food = await fetch(URL).then((response) => response.json());\n    return food;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable no-alert */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { fetchFoodApiByIngredient,\n  fetchFoodApiByLetter, fetchFoodApiByName } from '../helpers';\nimport { Button, Form } from 'react-bootstrap';\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      array: [],\n      input: '',\n      radio: '',\n      rotaComida: false,\n      rotaBebida: false,\n    };\n    this.foodAPIngredientes = this.foodAPIngredientes.bind(this);\n    this.change = this.change.bind(this);\n    this.APIcomidas = this.APIcomidas.bind(this);\n    this.APIbebidas = this.APIbebidas.bind(this);\n    this.twelveCards = this.twelveCards.bind(this);\n  }\n\n  change(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  foodAPIngredientes() {\n    const { location } = this.props;\n    if (location.pathname === '/comidas') {\n      this.APIcomidas();\n    }\n    if (location.pathname === '/bebidas') {\n      this.APIbebidas();\n    }\n  }\n\n  async APIcomidas() {\n    const { radio, input } = this.state;\n    const { history } = this.props;\n    let meals;\n    if (radio === 'ingredientes') {\n      meals = await fetchFoodApiByIngredient(input);\n    }\n    if (radio === 'nome') {\n      meals = await fetchFoodApiByName(input);\n    }\n    if (radio === 'primeiraLetra') {\n      if (input.length === 1) {\n        meals = await fetchFoodApiByLetter(input);\n      } else {\n        alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n    }\n    if (meals) {\n      this.setState({ array: meals, rotaComida: true, rotaBebida: false });\n    } else {\n      alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n      return [];\n    }\n    if (meals.length === 1) {\n      history.push(`/comidas/${meals[0].idMeal}`);\n    }\n  }\n\n  async APIbebidas() {\n    const { radio, input } = this.state;\n    const { history } = this.props;\n    let endPoint;\n    if (radio === 'ingredientes') {\n      endPoint = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${input}`;\n    }\n    if (radio === 'nome') {\n      endPoint = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${input}`;\n    }\n    if (radio === 'primeiraLetra') {\n      if (input.length > 1) {\n        alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n      endPoint = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${input}`;\n    }\n    // const { drinks } = await fetch(endPoint);\n    const { drinks } = await fetch(endPoint)\n      .then((response) => response.json());\n    if (drinks !== null && drinks.length > 1) {\n      this.setState({ array: drinks, rotaComida: false, rotaBebida: true });\n    } if (drinks === null) {\n      alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n      return [];\n    }\n    if (drinks.length === 1) {\n      history.push(`/bebidas/${drinks[0].idDrink}`);\n    }\n  }\n\n  twelveCards(arr) {\n    const newArr = [];\n    const indiceMaximoParaRenderizarDozeCards = 11;\n    const indiceMinino = 0;\n    for (let i = indiceMinino; i <= indiceMaximoParaRenderizarDozeCards; i += 1) {\n      if (arr[i] !== undefined) {\n        newArr.push(arr[i]);\n      }\n    }\n    return newArr;\n  }\n\n  render() {\n    const { history } = this.props;\n    const { array, rotaComida, rotaBebida } = this.state;\n    const newArr = this.twelveCards(array);\n    return (\n      <div>\n        <Form.Control\n          type=\"text\"\n          data-testid=\"search-input\"\n          name=\"input\"\n          onChange={ (event) => this.change(event) }\n        />\n        <div>\n          <Form.Check\n            type=\"radio\"\n            name=\"radio\"\n            value=\"nome\"\n            label=\"Nome\"\n            data-testid=\"name-search-radio\"\n            onChange={ (event) => this.change(event) }\n          />\n          <Form.Check\n            type=\"radio\"\n            data-testid=\"ingredient-search-radio\"\n            name=\"radio\"\n            value=\"ingredientes\"\n            label=\"Ingrediente\"\n            onChange={ (event) => this.change(event) }\n          />\n          <Form.Check\n            type=\"radio\"\n            name=\"radio\"\n            value=\"primeiraLetra\"\n            label=\"Primeira Letra\"\n            data-testid=\"first-letter-search-radio\"\n            onChange={ (event) => this.change(event) }\n          />\n        </div>\n        <Button\n        className=\"filter-button\"\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ async () => this.foodAPIngredientes() }\n        >\n          Executar Pesquisa\n        </Button>\n        {rotaComida ? (newArr.map((food, index) => (\n          <div\n            key={ food.idMeal }\n            data-testid={ `${index}-recipe-card` }\n            className=\"card\"\n          >\n            <button\n              type=\"button\"\n              onClick={ () => {\n                history.push(`/comidas/${food.idMeal}`);\n              } }\n            >\n              <img\n                className=\"linkImage\"\n                src={ food.strMealThumb }\n                data-testid={ `${index}-card-img` }\n                alt=\"Imagem Do Elemento\"\n              />\n            </button>\n            <center>\n              <div\n                data-testid={ `${index}-card-name` }\n                className=\"cardNameSearchBar\"\n              >\n                {food.strMeal}\n\n              </div>\n            </center>\n          </div>)))\n          : <div />}\n        {rotaBebida ? (newArr.map((drink, index) => (\n          <div key={ drink } data-testid={ `${index}-recipe-card` } className=\"card\">\n            <button\n              type=\"button\"\n              onClick={ () => {\n                history.push(`/bebidas/${drink.idDrink}`);\n              } }\n            >\n              <img\n                src={ drink.strDrinkThumb }\n                className=\"linkImage\"\n                alt=\"Imagem Do Elemento\"\n                data-testid={ `${index}-card-img` }\n              />\n            </button>\n            <center>\n              <div\n                data-testid={ `${index}-card-name` }\n                className=\"cardNameSearchBar\"\n              >\n                {drink.strDrink}\n\n              </div>\n            </center>\n          </div>))) : <div />}\n      </div>\n\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  location: PropTypes.shape.isRequired,\n  history: PropTypes.shape.isRequired,\n};\n\nconst SearchBarLocation = withRouter(SearchBar);\n\nexport default SearchBarLocation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport profileIcon from '../../images/profileIcon.svg';\nimport searchIcon from '../../images/searchIcon.svg';\nimport SearchBarLocation from '../SearchBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport './styles.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hidden: true,\n    };\n    this.title = this.title.bind(this);\n    this.invertHidden = this.invertHidden.bind(this);\n  }\n\n  title(pathname) {\n    let title = '';\n    switch (pathname) {\n    case '/comidas':\n      title = 'Comidas';\n      break;\n    case '/bebidas':\n      title = 'Bebidas';\n      break;\n    case '/explorar':\n      title = 'Explorar';\n      break;\n    case '/explorar/comidas':\n      title = 'Explorar Comidas';\n      break;\n    case '/explorar/bebidas':\n      title = 'Explorar Bebidas';\n      break;\n    case '/explorar/comidas/ingredientes':\n    case '/explorar/bebidas/ingredientes':\n      title = 'Explorar Ingredientes';\n      break;\n    case '/explorar/comidas/area':\n      title = 'Explorar Origem';\n      break;\n    case '/perfil':\n      title = 'Perfil';\n      break;\n    case '/receitas-feitas':\n      title = 'Receitas Feitas';\n      break;\n    case '/receitas-favoritas':\n      title = 'Receitas Favoritas';\n      break;\n    default:\n      title = '';\n    }\n    return (title);\n  }\n\n  invertHidden() {\n    const { hidden } = this.state;\n    if (hidden === true) {\n      this.setState({ hidden: false });\n    }\n    if (hidden === false) {\n      this.setState({ hidden: true });\n    }\n  }\n\n  render() {\n    const { location, history } = this.props;\n    const { hidden } = this.state;\n    return (\n      <Container>\n        <div className=\"d-flex justify-content-between align-items-baseline\">\n          <button\n            className=\"profile-button\"\n            type=\"button\"\n            onClick={ () => { history.push('./perfil'); } }\n          >\n            <img\n              src={ profileIcon }\n              alt=\"imagem-profile\"\n              data-testid=\"profile-top-btn\"\n\n            />\n          </button>\n          <button\n            className=\"profile-button\"\n            type=\"button\"\n            onClick={ () => this.invertHidden() }\n          >\n            <img\n              src={ searchIcon }\n              alt=\"search-icon\"\n              data-testid=\"search-top-btn\"\n            />\n          </button>\n        </div>\n        <div data-testid=\"page-title\">\n          <h2>{this.title(location.pathname)}</h2>\n        </div>\n        {\n          (location.pathname === '/comidas'\n          || location.pathname === '/bebidas'\n          || location.pathname === '/explorar/comidas/area'\n          || location.pathname === '/explorar/bebidas/area')\n            ? (\n              <div>\n                {hidden ? <div /> : <SearchBarLocation />}\n              </div>\n            ) : (\n              <div />\n            )\n        }\n      </Container>\n    );\n  }\n}\n\nconst HeaderLocation = withRouter(Header);\nexport default HeaderLocation;\n\nHeader.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\n// a soluÃ§Ã£o para generalizaÃ§Ã£o do Header foi inspirada e adaptada a partir da resoluÃ§Ã£o\n// do grupo 11 da T07 https://github.com/tryber/sd-07-project-recipes-app/tree/main-group-11\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-bootstrap';\n\nclass RecipeCard extends React.Component {\n  render() {\n    const { idRecipeCard, idImg, srcImg, idCardName, mealName } = this.props;\n    return (\n      <div data-testid={ idRecipeCard }>\n        <center>\n          <Image\n            thumbnail\n            data-testid={ idImg }\n            src={ srcImg }\n            alt=\"recipe pic\"\n            className=\"linkImage\"\n          />\n          <p data-testid={ idCardName }>{mealName}</p>\n        </center>\n      </div>\n    );\n  }\n}\nRecipeCard.propTypes = {\n  idRecipeCard: PropTypes.string.isRequired,\n  idImg: PropTypes.string.isRequired,\n  srcImg: PropTypes.string.isRequired,\n  idCardName: PropTypes.string.isRequired,\n  mealName: PropTypes.string.isRequired,\n};\nexport default RecipeCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Row } from 'react-bootstrap';\nimport Footer from '../components/Footer';\nimport HeaderLocation from '../components/Header';\nimport RecipeCard from '../components/RecipeCard';\n\nconst MAX_CATEGORIES = 5;\nconst MAX_CARDS = 12;\n\nclass Comidas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedCategory: [],\n      categoryName: '',\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(category) {\n    const { meals: { meals, Beef, Breakfast, Chicken, Dessert, Goat } } = this.props;\n    const { categoryName } = this.state;\n    if (category !== categoryName && category !== 'All') {\n      this.setState({ categoryName: category });\n      switch (category) {\n      case 'Beef':\n        this.setState({ selectedCategory: Beef });\n        break;\n      case 'Breakfast':\n        this.setState({ selectedCategory: Breakfast });\n        break;\n      case 'Chicken':\n        this.setState({ selectedCategory: Chicken });\n        break;\n      case 'Dessert':\n        this.setState({ selectedCategory: Dessert });\n        break;\n      case 'Goat':\n        this.setState({ selectedCategory: Goat });\n        break;\n      default:\n        this.setState({ selectedCategory: meals });\n        break;\n      }\n    } else {\n      this.setState({ categoryName: '', selectedCategory: meals });\n    }\n  }\n\n  render() {\n    const { categories: { recipesCategories }, meals: { meals } } = this.props;\n    const { selectedCategory } = this.state;\n    if (selectedCategory.length === 0) {\n      return (\n        <div className=\"teste\">\n          <Container>\n            <HeaderLocation />\n            <div className=\"d-flex justify-content-around flex-wrap\">\n              <Button\n                size=\"sm\"\n                className=\"filter-button orange\"\n                type=\"button\"\n                onClick={ (event) => this.handleClick(event.target.name) }\n                name=\"All\"\n                data-testid=\"All-category-filter\"\n              >\n                All\n              </Button>\n              {\n                recipesCategories.map((category, index) => {\n                  if (index < MAX_CATEGORIES) {\n                    return (\n                      <Button\n                        size=\"sm\"\n                        className=\"filter-button orange\"\n                        key={ index }\n                        type=\"button\"\n                        onClick={ () => this.handleClick(category.strCategory) }\n                        data-testid={ `${category.strCategory}-category-filter` }\n                      >\n                        {category.strCategory}\n                      </Button>\n                    );\n                  }\n                  return null;\n                })\n              }\n            </div>\n            <Row lg=\"4\" md=\"3\">\n              {\n\n                meals.map((meal, index) => {\n                  if (index < MAX_CARDS) {\n                    return (\n                      <Link\n                        key={ index }\n                        className=\"recipe-link\"\n                        to={ `/comidas/${meal.idMeal}` }\n                      >\n                        <RecipeCard\n                          idRecipeCard={ `${index}-recipe-card` }\n                          idImg={ `${index}-card-img` }\n                          srcImg={ meal.strMealThumb }\n                          idCardName={ `${index}-card-name` }\n                          mealName={ meal.strMeal }\n                        />\n                      </Link>\n                    );\n                  }\n                  return null;\n                })\n              }\n            </Row>\n          </Container>\n          <br />\n          <br />\n          <Footer className=\"footer orange\" />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Container>\n          <HeaderLocation />\n          <div className=\"d-flex justify-content-around flex-wrap\">\n            <Button\n              size=\"sm\"\n              className=\"filter-button orange\"\n              type=\"button\"\n              onClick={ (event) => this.handleClick(event.target.name) }\n              name=\"All\"\n              data-testid=\"All-category-filter\"\n            >\n              All\n            </Button>\n            {\n              recipesCategories.map((category, index) => {\n                if (index < MAX_CATEGORIES) {\n                  return (\n                    <Button\n                      size=\"sm\"\n                      className=\"filter-button orange\"\n                      type=\"button\"\n                      onClick={ () => this.handleClick(category.strCategory) }\n                      data-testid={ `${category.strCategory}-category-filter` }\n                    >\n                      {category.strCategory}\n                    </Button>\n                  );\n                }\n                return null;\n              })\n            }\n          </div>\n\n          {\n\n            selectedCategory.map((meal, index) => {\n              if (index < MAX_CARDS) {\n                console.log(meal);\n                return (\n                  <Link\n                    className=\"recipe-link\"\n                    to={ `/comidas/${meal.idMeal}` }\n                  >\n                    <RecipeCard\n                      idRecipeCard={ `${index}-recipe-card` }\n                      idImg={ `${index}-card-img` }\n                      srcImg={ meal.strMealThumb }\n                      idCardName={ `${index}-card-name` }\n                      mealName={ meal.strMeal }\n                    />\n                  </Link>\n                );\n              }\n              return null;\n            })\n          }\n        </Container>\n        <br />\n        <br />\n        <Footer className=\"footer orange\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.categories,\n  meals: state.meals,\n});\n\nComidas.propTypes = {\n  meals: PropTypes.objectOf(Object).isRequired,\n  categories: PropTypes.objectOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Comidas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Row } from 'react-bootstrap';\nimport Footer from '../components/Footer';\nimport HeaderLocation from '../components/Header';\nimport RecipeCard from '../components/RecipeCard';\n\nconst MAX_CATEGORIES = 5;\nconst MAX_CARDS = 12;\n\nclass Bebidas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedCategory: null,\n      categoryName: '',\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(category) {\n    const { drinks:\n      { drinks, ordinaryDrink,\n        cocktail, milkFloatShake, otherUnknown, cocoa } } = this.props;\n    const { categoryName } = this.state;\n    if (category !== categoryName && category !== 'All') {\n      this.setState({ categoryName: category });\n      switch (category) {\n      case 'Ordinary Drink':\n        this.setState({ selectedCategory: ordinaryDrink });\n        break;\n      case 'Cocktail':\n        this.setState({ selectedCategory: cocktail });\n        break;\n      case 'Milk / Float / Shake':\n        this.setState({ selectedCategory: milkFloatShake });\n        break;\n      case 'Other/Unknown':\n        this.setState({ selectedCategory: otherUnknown });\n        break;\n      case 'Cocoa':\n        this.setState({ selectedCategory: cocoa });\n        break;\n      default:\n        this.setState({ selectedCategory: drinks });\n        break;\n      }\n    } else {\n      this.setState({ categoryName: '', selectedCategory: drinks });\n    }\n  }\n\n  render() {\n    const { categories: { drinksCategories }, drinks: { drinks } } = this.props;\n    const { selectedCategory } = this.state;\n    if (!selectedCategory) {\n      return (\n        <div>\n          <Container>\n            <HeaderLocation />\n            <div className=\"d-flex justify-content-around flex-wrap\">\n              <Button\n                size=\"sm\"\n                className=\"filter-button orange\"\n                type=\"submit\"\n                onClick={ (event) => this.handleClick(event.target.name) }\n                name=\"All\"\n                data-testid=\"All-category-filter\"\n              >\n                All\n              </Button>\n              {\n                drinksCategories.map((category, index) => {\n                  if (index < MAX_CATEGORIES) {\n                    return (\n                      <Button\n                        size=\"sm\"\n                        className=\"filter-button orange\"\n                        type=\"submit\"\n                        onClick={ () => this.handleClick(category.strCategory) }\n                        data-testid={ `${category.strCategory}-category-filter` }\n                      >\n                        {category.strCategory}\n                      </Button>\n                    );\n                  }\n                  return null;\n                })\n              }\n            </div>\n            <Row lg=\"4\" md=\"3\">\n              {\n\n                drinks.map((drink, index) => {\n                  if (index < MAX_CARDS) {\n                    return (\n                      <Link\n                        to={ `/bebidas/${drink.idDrink}` }\n                        className=\"recipe-link\"\n                      >\n                        <RecipeCard\n                          idRecipeCard={ `${index}-recipe-card` }\n                          idImg={ `${index}-card-img` }\n                          srcImg={ drink.strDrinkThumb }\n                          idCardName={ `${index}-card-name` }\n                          mealName={ drink.strDrink }\n                        />\n                      </Link>\n                    );\n                  }\n                  return null;\n                })\n              }\n            </Row>\n          </Container>\n          <br />\n          <br />\n          <Footer className=\"footer orange\" />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Container>\n          <HeaderLocation />\n          <div className=\"d-flex justify-content-around flex-wrap\">\n            <Button\n              size=\"sm\"\n              className=\"filter-button orange\"\n              type=\"button\"\n              onClick={ (event) => this.handleClick(event.target.name) }\n              name=\"All\"\n              data-testid=\"All-category-filter\"\n            >\n              All\n            </Button>\n            {\n              drinksCategories.map((category, index) => {\n                if (index < MAX_CATEGORIES) {\n                  return (\n                    <Button\n                      size=\"sm\"\n                      className=\"filter-button orange\"\n                      type=\"button\"\n                      onClick={ () => this.handleClick(category.strCategory) }\n                      data-testid={ `${category.strCategory}-category-filter` }\n                    >\n                      {category.strCategory}\n                    </Button>\n                  );\n                }\n                return null;\n              })\n            }\n          </div>\n          {\n\n            selectedCategory.map((drink, index) => {\n              if (index < MAX_CARDS) {\n                return (\n                  <Link\n                    to={ `/bebidas/${drink.idDrink}` }\n                    className=\"recipe-link\"\n                  >\n                    <RecipeCard\n                      idRecipeCard={ `${index}-recipe-card` }\n                      idImg={ `${index}-card-img` }\n                      srcImg={ drink.strDrinkThumb }\n                      idCardName={ `${index}-card-name` }\n                      mealName={ drink.strDrink }\n                    />\n                  </Link>\n                );\n              }\n              return null;\n            })\n          }\n        </Container>\n        <br />\n        <br />\n        <Footer className=\"footer orange\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.categories,\n  drinks: state.drinks,\n  selectedCategory: state.selectedCategory,\n});\n\nBebidas.propTypes = {\n  drinks: PropTypes.arrayOf(Array).isRequired,\n  categories: PropTypes.arrayOf(Array).isRequired,\n};\n\nexport default connect(mapStateToProps)(Bebidas);\n","import React, { Component } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport HeaderLocation from '../components/Header';\n\nclass Explorar extends Component {\n  render() {\n    return (\n      <div>\n        <Container fluid>\n          <HeaderLocation title=\"Explorar\" />\n          <div>\n            <Link\n              data-testid=\"explore-food\"\n              to=\"/explorar/comidas\"\n            >\n              <Button\n                className=\"default-button orange\"\n                block\n                type=\"button\"\n              >\n                Explorar Comidas\n              </Button>\n            </Link>\n            <Link\n              data-testid=\"explore-drinks\"\n              to=\"/explorar/bebidas\"\n            >\n              <Button\n                className=\"default-button orange\"\n                block\n                type=\"button\"\n              >\n                Explorar Bebidas\n              </Button>\n            </Link>\n          </div>\n        </Container>\n        <Footer className=\"footer white\" />\n      </div>\n    );\n  }\n}\n\nexport default Explorar;\n","import React, { Component } from 'react';\nimport HeaderLocation from '../components/Header';\n\nclass ComidasIngredientes extends Component {\n  render() {\n    return (\n      <div>\n        <HeaderLocation />\n      </div>\n    );\n  }\n}\n\nexport default ComidasIngredientes;\n","import React, { Component } from 'react';\nimport HeaderLocation from '../components/Header';\n\nclass BebidasIngredientes extends Component {\n  render() {\n    return (\n      <div>\n        <HeaderLocation />\n      </div>\n    );\n  }\n}\n\nexport default BebidasIngredientes;\n","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchListArea, fetchFoodsAreaName, fetchAPIFood } from '../helpers/index';\n\nfunction ExploreByArea() {\n  const [foods, setFoods] = useState([]);\n  const [apiListFood, setApiListFood] = useState([]);\n  const [country, setCountry] = useState('');\n\n  const getApiCategoriesFood = async () => {\n    setApiListFood(await fetchListArea());\n    setFoods(await fetchAPIFood());\n  };\n\n  const getFoodsArea = async () => {\n    if (country === 'all') {\n      setFoods(await fetchAPIFood());\n    } else {\n      setFoods(await fetchFoodsAreaName(country));\n    }\n  };\n\n  useEffect(() => {\n    getApiCategoriesFood();\n  }, []);\n\n  useEffect(() => {\n    getFoodsArea();\n  }, [country]);\n\n  const zero = 0;\n  const maxMeals = 12;\n\n  return (\n    <div>\n      <Container>\n        <Header />\n        {apiListFood !== undefined && apiListFood !== null ? (\n          <div>\n            <select\n              data-testid=\"explore-by-area-dropdown\"\n              value={ country }\n              onChange={ (e) => setCountry(e.target.value) }\n            >\n              <option key=\"all\" value=\"all\" data-testid=\"All-option\">All</option>\n              {apiListFood\n                .map((item) => (\n                  <option\n                    key={ item.strArea }\n                    value={ item.strArea }\n                    data-testid={ `${item.strArea}-option` }\n                  >\n                    {item.strArea}\n                  </option>))}\n            </select>\n          </div>\n        ) : []}\n        <center>\n          {foods !== undefined && foods !== null ? (\n            foods.map((item, index) => (\n              <Link\n                className=\"recipe-link\"\n                to={ `/comidas/${item.idMeal}` }\n                key={ item.strMeal }\n                style={ { width: '8rem' } }\n              >\n                <div\n                  data-testid={ `${index}-recipe-card` }\n                >\n                  <img\n                    data-testid={ `${index}-card-img` }\n                    src={ item.strMealThumb }\n                    alt=\"Imagem de capa do card\"\n                    className=\"linkImage\"\n                  />\n                  <div>\n                    <p\n                      data-testid={ `${index}-card-name` }\n                    >\n                      { item.strMeal }\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            )).slice(zero, maxMeals)\n          ) : (\n            []\n          )}\n        </center>\n      </Container>\n      <Footer className=\"footer orange\" />\n    </div>\n  );\n}\n\nexport default ExploreByArea;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport HeaderLocation from '../components/Header';\nimport { getRandomFood } from '../helpers';\n\nexport default function ExploreFoods() {\n  const [randomFood, setRandomFood] = useState();\n  const handleGetFood = async () => {\n    console.log('food');\n    const result = await getRandomFood();\n    if (result) {\n      setRandomFood(result.meals[0].idMeal);\n      console.log(randomFood);\n    }\n  };\n\n  useEffect(() => {\n    handleGetFood();\n  }, []);\n\n  return (\n    <div>\n      <Container fluid className=\"main-profile\">\n        <HeaderLocation />\n        <div className=\"perfil-container\">\n          <Link\n            data-testid=\"explore-by-ingredient\"\n            to=\"/explorar/comidas/ingredientes\"\n          >\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n            >\n              Por Ingredientes\n            </Button>\n          </Link>\n          <Link\n            data-testid=\"explore-by-area\"\n            to=\"/explorar/comidas/area\"\n          >\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n            >\n              Por Local de Origem\n            </Button>\n          </Link>\n          <Link\n            data-testid=\"explore-surprise\"\n            to={ `/comidas/${randomFood}` }\n            onClick={ handleGetFood }\n          >\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n            >\n              Me Surpreenda!\n            </Button>\n          </Link>\n\n        </div>\n      </Container>\n      <Footer className=\"footer white\" />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport HeaderLocation from '../components/Header';\nimport { getRandomDrink } from '../helpers';\n\nexport default function ExploreDrinks() {\n  const [randomDrink, setRandomDrink] = useState();\n  const handleGetDrink = async () => {\n    console.log('drink');\n    const result = await getRandomDrink();\n    if (result) {\n      setRandomDrink(result.drinks[0].idDrink);\n      console.log(randomDrink);\n    }\n  };\n\n  useEffect(() => {\n    handleGetDrink();\n  }, []);\n\n  return (\n    <div>\n      <Container fluid className=\"main-profile\">\n        <HeaderLocation title=\"Explorar Bebidas\" />\n        <div className=\"perfil-container\">\n          <Link\n            data-testid=\"explore-by-ingredient\"\n            to=\"/explorar/bebidas/ingredientes\"\n          >\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n            >\n              Por Ingredientes\n            </Button>\n          </Link>\n          <Link\n            data-testid=\"explore-surprise\"\n            to={ `/bebidas/${randomDrink}` }\n            onClick={ handleGetDrink }\n          >\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n            >\n              Me Surpreenda!\n            </Button>\n          </Link>\n        </div>\n      </Container>\n      <Footer className=\"footer white\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-bootstrap';\n\nexport default function CardIngredientsDrinks({ index, name }) {\n  const history = useHistory();\n  const src = `https://www.thecocktaildb.com/images/ingredients/${name}-Small.png`;\n  const searchRecipes = async () => {\n    history.push('/bebidas');\n  };\n  return (\n    <div data-testid={ `${index}-ingredient-card` }>\n      <center>\n        <Image\n          alt=\"Recipe Thumbnail\"\n          data-testid={ `${index}-card-img` }\n          src={ src }\n          onClick={ searchRecipes }\n          className=\"imageLink\"\n          height=\"150\"\n          style={ { cursor: 'pointer' } }\n        />\n        <h6\n          data-testid={ `${index}-card-name` }\n          style={ { cursor: 'pointer' } }\n        >\n          {name}\n        </h6>\n      </center>\n    </div>\n  );\n}\nCardIngredientsDrinks.propTypes = {\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","const URL = 'https://www.thecocktaildb.com/api/json/v1/1/';\n\nconst ENDPOINT = {\n  listIngredient: 'list.php?i=list',\n};\n\nasync function getDrinks(key, name) {\n  const requestResponse = await fetch(`${URL}${ENDPOINT[key]}${name}`)\n    .then((response) => response.json());\n  return requestResponse;\n}\n\nexport default getDrinks;\n","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport CardIngredientsDrinks from '../components/CardIngredientsDrinks';\nimport getDrinks from '../helpers/drinkApi';\n\nexport default function DrinkIngredients() {\n  const [ingredients, setIngrediets] = useState('');\n  const zero = 0;\n  const twelve = 12;\n  useEffect(() => {\n    async function fetchIngredients() {\n      const response = await getDrinks('listIngredient', '');\n      setIngrediets(response.drinks);\n    }\n    fetchIngredients();\n  }, [setIngrediets]);\n  return (\n    <div>\n      <Container>\n        <Header title=\"Explorar Ingredientes\" />\n        <center>\n          <div className=\"d-flex justify-content-around flex-wrap\">\n            { (ingredients.length > zero)\n&& ingredients.map((ingredient, index) => {\n  if (index < twelve) {\n    return (\n      <CardIngredientsDrinks\n        index={ index }\n        name={ ingredient.strIngredient1 }\n        key={ index }\n        isMeal={ false }\n      />\n    );\n  }\n  return null;\n})}\n          </div>\n        </center>\n      </Container>\n      <br />\n      <br />\n      <br />\n      <Footer className=\"footer orange\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Image } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function CardIngredientsFoods({ index, name }) {\n  const history = useHistory();\n  const src = `https://www.themealdb.com/images/ingredients/${name}-Small.png`;\n  const path = '/comidas';\n\n  const searchRecipes = async () => {\n    history.push(path);\n  };\n  return (\n    <div data-testid={ `${index}-ingredient-card` }>\n      <center>\n        <Image\n          alt=\"Recipe Thumbnail\"\n          data-testid={ `${index}-card-img` }\n          src={ src }\n          onClick={ searchRecipes }\n          className=\"imageLink\"\n          height=\"150\"\n          style={ { cursor: 'pointer' } }\n        />\n        <h6\n          data-testid={ `${index}-card-name` }\n          style={ { cursor: 'pointer' } }\n        >\n          {name}\n        </h6>\n      </center>\n    </div>\n  );\n}\nCardIngredientsFoods.propTypes = {\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","const URL = 'https://www.themealdb.com/api/json/v1/1/';\n\nconst ENDPOINT = {\n  listIngredient: 'list.php?i=list',\n};\n\nexport default async function getIngredients(key, name) {\n  const requestResponse = await fetch(`${URL}${ENDPOINT[key]}${name}`)\n    .then((response) => response.json());\n  return requestResponse;\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport CardIngredientsFoods from '../components/CardIngredientsFoods';\nimport getMeals from '../helpers/ingredientsApi';\n\nexport default function FoodIngredientes() {\n  const [ingredients, setIngrediets] = useState('');\n  const zero = 0;\n  const twelve = 12;\n\n  useEffect(() => {\n    async function fetchIngredients() {\n      const response = await getMeals('listIngredient', '');\n      setIngrediets(response.meals);\n    }\n    fetchIngredients();\n  }, [setIngrediets]);\n\n  return (\n    <div>\n      <Container>\n        <Header title=\"Explorar Ingredientes\" />\n        <center>\n          <div className=\"d-flex justify-content-around flex-wrap\">\n            { (ingredients.length > zero)\n        && ingredients.map((ingredient, index) => {\n          if (index < twelve) {\n            return (\n              <CardIngredientsFoods\n                index={ index }\n                name={ ingredient.strIngredient }\n                key={ index }\n                isMeal\n              />\n            );\n          }\n          return null;\n        })}\n          </div>\n        </center>\n      </Container>\n      <br />\n      <br />\n      <br />\n      <Footer className=\"footer orange\" />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { Button, Container } from 'react-bootstrap';\nimport Footer from '../../components/Footer';\nimport HeaderLocation from '../../components/Header';\nimport login from '../../store/actions/user.actions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n// import './perfil.css';\n\nclass Perfil extends Component {\n  constructor() {\n    super();\n    this.state = {\n      routeTo: null,\n    };\n\n    this.setRoute = this.setRoute.bind(this);\n  }\n\n  setRoute(route) {\n    this.setState({ routeTo: route });\n  }\n\n  render() {\n    const { routeTo } = this.state;\n    if (routeTo) return <Redirect push to={ routeTo } />;\n\n    const { email, setEmail } = this.props;\n    const userEmailLocalStorage = JSON.parse(localStorage.getItem('user'));\n\n    return (\n      <div>\n        <Container fluid className=\"main-profile\">\n          <HeaderLocation />\n          <div className=\"perfil-container\">\n            <h6 className=\"email\" data-testid=\"profile-email\">\n              {(userEmailLocalStorage && userEmailLocalStorage.email)\n              || email || ''}\n            </h6>\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n              data-testid=\"profile-done-btn\"\n              onClick={ () => this.setRoute('/receitas-feitas') }\n            >\n              Receitas Feitas\n            </Button>\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n              data-testid=\"profile-favorite-btn\"\n              onClick={ () => this.setRoute('/receitas-favoritas') }\n            >\n              Receitas Favoritas\n            </Button>\n            <Button\n              className=\"default-button\"\n              block\n              type=\"button\"\n              data-testid=\"profile-logout-btn\"\n              onClick={ () => {\n                localStorage.clear('user');\n                setEmail('');\n                this.setRoute('/');\n              } }\n            >\n              Sair\n            </Button>\n          </div>\n        </Container>\n        <Footer className=\"footer white\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEmail: (email) => dispatch(login(email)),\n});\n\nPerfil.propTypes = {\n  email: PropTypes.string.isRequired,\n  setEmail: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Perfil);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nexport default class FilterButtons extends Component {\n  render() {\n    const { changeFilter } = this.props;\n    return (\n      <div className=\"d-flex justify-content-around\">\n        <Button\n          className=\"filter-button\"\n          type=\"button\"\n          onClick={ () => changeFilter('all') }\n          data-testid=\"filter-by-all-btn\"\n        >\n          All\n        </Button>\n        <Button\n          className=\"filter-button\"\n          type=\"button\"\n          onClick={ () => changeFilter('comida') }\n          data-testid=\"filter-by-food-btn\"\n        >\n          Food\n        </Button>\n        <Button\n          className=\"filter-button\"\n          type=\"button\"\n          onClick={ () => changeFilter('bebida') }\n          data-testid=\"filter-by-drink-btn\"\n        >\n          Drinks\n        </Button>\n      </div>\n    );\n  }\n}\n\nFilterButtons.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport fav from '../../images/blackHeartIcon.svg';\nimport notFav from '../../images/whiteHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\nimport { addFoodToFavorite, fetchFoodApiById, fetchDrinkApiById,\n  removeFromFavorite } from '../../helpers';\nimport updateFavorites from '../../store/actions/favoriteRecipes.actions';\nimport './styles.css';\n\nclass DoneAndFavoriteCards extends Component {\n  componentDidMount() {\n    this.updateFavoriteRecipes();\n  }\n\n  updateFavoriteRecipes() {\n    const { updateFavoriteList, updateFavoriteItems } = this.props;\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!favoriteRecipes) return;\n    const list = favoriteRecipes.reduce((acc, curr) => {\n      acc = {\n        ...acc,\n        [curr.id]: true,\n      };\n      return acc;\n    }, {});\n    updateFavoriteList(list);\n    if (!updateFavoriteItems) return;\n    updateFavoriteItems();\n  }\n\n  async favoriteThisItem(currentRecipe) {\n    const removed = removeFromFavorite(currentRecipe.id);\n    if (!removed) {\n      const { type } = currentRecipe;\n      const fetchFoodOrDrink = {\n        comida: (id) => fetchFoodApiById(id),\n        bebida: (id) => fetchDrinkApiById(id),\n        comidas: (id) => fetchFoodApiById(id),\n        bebidas: (id) => fetchDrinkApiById(id),\n      };\n      const foodOrDrink = await fetchFoodOrDrink[type](currentRecipe.id);\n      addFoodToFavorite(foodOrDrink, currentRecipe.type);\n    }\n    this.updateFavoriteRecipes();\n  }\n\n  render() {\n    const { recipes, filter, share, favoriteRecipe } = this.props;\n\n    return (\n      <div>\n        <Container>\n          <center>\n            {recipes && recipes.filter((element) => !filter\n        || filter === 'all' || element.type === filter)\n              .map((obj, index) => (\n                <div key={ obj.id }>\n                  <Link to={ `${obj.type}s/${obj.id}` }>\n                    <img\n                      data-testid={ `${index}-horizontal-image` }\n                      alt=\"card\"\n                      src={ `${obj.image}` }\n                      className=\"linkImage\"\n                    />\n                  </Link>\n\n                  <p\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    {`${obj.alcoholicOrNot} ${obj.area} - ${obj.category}`}\n\n                  </p>\n                  <Link className=\"recipe-link\" to={ `${obj.type}s/${obj.id}` }>\n                    <p data-testid={ `${index}-horizontal-name` }>{obj.name}</p>\n                  </Link>\n                  <p data-testid={ `${index}-horizontal-done-date` }>{obj.doneDate}</p>\n\n                  {obj.tags && obj.tags.map((tag) => (\n                    <div\n                      className=\"tags\"\n                      key={ tag }\n                    >\n                      tags:\n                      <p\n                        data-testid={ `${index}-${tag}-horizontal-tag` }\n                      >\n                        {tag}\n                      </p>\n                    </div>\n                  ))}\n                  <div className=\"d-flex justify-content-end\">\n                    <button\n                      className=\"recipe-button\"\n                      type=\"button\"\n                      onClick={ () => share(obj) }\n                    >\n                      <img\n                        alt=\"card\"\n                        data-testid={ `${index}-horizontal-share-btn` }\n                        src={ shareIcon }\n                      />\n                    </button>\n                    <button\n                      className=\"recipe-button\"\n                      type=\"button\"\n                      onClick={ () => this.favoriteThisItem(obj) }\n                    >\n                      <img\n                        src={ favoriteRecipe[Number(obj.id)] ? fav : notFav }\n                        alt=\"favorite\"\n                        data-testid={ `${index}-horizontal-favorite-btn` }\n                      />\n                    </button>\n                  </div>\n                </div>))}\n          </center>\n        </Container>\n      </div>\n    );\n  }\n}\n\nDoneAndFavoriteCards.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.string.isRequired,\n  share: PropTypes.func.isRequired,\n  updateFavoriteList: PropTypes.func.isRequired,\n  favoriteRecipe: PropTypes.shape({}).isRequired,\n  updateFavoriteItems: PropTypes.func,\n};\n\nDoneAndFavoriteCards.defaultProps = {\n  updateFavoriteItems: null,\n};\n\nconst mapStateToProps = (state) => ({\n  favoriteRecipe: state.favoriteRecipes,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateFavoriteList: (favorites) => dispatch(updateFavorites(favorites)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoneAndFavoriteCards);\n","export default function updateFavorites(data) {\n  return {\n    type: 'UPDATE_FAVORITES',\n    payload: data,\n  };\n}\n","import React, { Component } from 'react';\nimport copy from 'clipboard-copy';\nimport HeaderLocation from '../components/Header';\nimport FilterButtons from '../components/FilterButtons';\nimport DoneAndFavoriteCards from '../components/DoneAndFavoriteCards';\n\nclass ReceitasFeitas extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [\n        {\n          id: '52771',\n          type: 'comida',\n          area: 'Italian',\n          category: 'Vegetarian',\n          alcoholicOrNot: '',\n          name: 'Spicy Arrabiata Penne',\n          image: 'https://www.themealdb.com/images/media/meals/ustsqw1468250014.jpg',\n          doneDate: '23/06/2020',\n          tags: ['Pasta', 'Curry'],\n        },\n        {\n          id: '178319',\n          type: 'bebida',\n          area: '',\n          category: 'Cocktail',\n          alcoholicOrNot: 'Alcoholic',\n          name: 'Aquamarine',\n          image: 'https://www.thecocktaildb.com/images/media/drink/zvsre31572902738.jpg',\n          doneDate: '23/06/2020',\n          tags: [],\n        },\n      ],\n      filter: 'all',\n      displayShareMesage: false,\n    };\n    this.share = this.share.bind(this);\n    this.changeFilter = this.changeFilter.bind(this);\n  //   this.APIbebidas = this.APIbebidas.bind(this);\n  //   this.twelveCards = this.twelveCards.bind(this);\n  // }\n  }\n\n  changeFilter(type) {\n    return this.setState({ filter: type });\n  }\n\n  share(obj) {\n    const location = `http://localhost:3000/${obj.type}s/${obj.id}`;\n    copy(location);\n    const SHOW_TIME_MILISECONDS = 3000;\n    this.setState({ displayShareMesage: true }, () => {\n      setTimeout(() => this.setState(\n        { displayShareMesage: false },\n      ), SHOW_TIME_MILISECONDS);\n    });\n  }\n\n  render() {\n    const { displayShareMesage, recipes, filter } = this.state;\n    return (\n      <div>\n        <HeaderLocation />\n        <FilterButtons changeFilter={ this.changeFilter } />\n        { displayShareMesage ? <p className=\"alert\">Link copiado!</p> : <div />}\n        <DoneAndFavoriteCards\n          recipes={ recipes }\n          filter={ filter }\n          share={ this.share }\n        />\n      </div>\n    );\n  }\n}\n\nexport default ReceitasFeitas;\n","import copy from 'clipboard-copy';\nimport React, { Component } from 'react';\nimport DoneAndFavoriteCards from '../components/DoneAndFavoriteCards';\nimport FilterButtons from '../components/FilterButtons';\nimport HeaderLocation from '../components/Header';\n\nclass ReceitasFavoritas extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [],\n      filter: 'all',\n      displayShareMesage: false,\n    };\n    this.share = this.share.bind(this);\n    this.changeFilter = this.changeFilter.bind(this);\n    this.updateFavoriteItems = this.updateFavoriteItems.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateFavoriteItems();\n  }\n\n  updateFavoriteItems() {\n    const list = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    this.setState({ recipes: list });\n  }\n\n  changeFilter(type) {\n    return this.setState({ filter: type });\n  }\n\n  share(obj) {\n    const location = `http://localhost:3000/${obj.type}s/${obj.id}`;\n    copy(location);\n    const SHOW_TIME_MILISECONDS = 3000;\n    this.setState({ displayShareMesage: true }, () => {\n      setTimeout(() => this.setState(\n        { displayShareMesage: false },\n      ), SHOW_TIME_MILISECONDS);\n    });\n  }\n\n  render() {\n    const { filter, displayShareMesage, recipes } = this.state;\n    return (\n      <div>\n        <HeaderLocation />\n        <FilterButtons changeFilter={ this.changeFilter } />\n\n        { displayShareMesage ? <p className=\"alert\">Link copiado!</p> : <div />}\n        <DoneAndFavoriteCards\n          recipes={ recipes }\n          filter={ filter }\n          share={ this.share }\n          updateFavoriteItems={ this.updateFavoriteItems }\n        />\n      </div>\n    );\n  }\n}\n\nexport default ReceitasFavoritas;\n","export const fetchCategories = () => (dispatch) => {\n  fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list')\n    .then((response) => response.json())\n    .then((data) => {\n      dispatch({ type: 'FETCH_MEALS_CATEGORIES', payload: data.meals });\n    });\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list')\n    .then((response) => response.json())\n    .then((data) => {\n      dispatch({ type: 'FETCH_DRINKS_CATEGORIES', payload: data.drinks });\n    });\n};\n\nexport default fetchCategories;\n","export const fetchMeals = () => (dispatch) => {\n  fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_MEALS', payload: data.meals }));\n  fetch('https://www.themealdb.com/api/json/v1/1/filter.php?c=Beef')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_BEEF_MEALS', payload: data.meals }));\n  fetch('https://www.themealdb.com/api/json/v1/1/filter.php?c=Breakfast')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_BREAKFAST_MEALS', payload: data.meals }));\n  fetch('https://www.themealdb.com/api/json/v1/1/filter.php?c=Chicken')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_CHICKEN_MEALS', payload: data.meals }));\n  fetch('https://www.themealdb.com/api/json/v1/1/filter.php?c=Dessert')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_DESSERT_MEALS', payload: data.meals }));\n  fetch('https://www.themealdb.com/api/json/v1/1/filter.php?c=Goat')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_GOAT_MEALS', payload: data.meals }));\n};\n\nexport default fetchMeals;\n","export const fetchDrinks = () => (dispatch) => {\n  const ORDINARY_DRINKS = 'Ordinary Drink';\n  const MILK_FLOAT_SHAKE_DRINKS = 'Milk / Float / Shake';\n  const OTHER_UNKNOWN_DRINKS = 'Other/Unknown';\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_DRINKS', payload: data.drinks }));\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${ORDINARY_DRINKS}`)\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_ORDINARY_DRINKS', payload: data.drinks }));\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=Cocktail')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_COCKTAIL_DRINKS', payload: data.drinks }));\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${MILK_FLOAT_SHAKE_DRINKS}`)\n    .then((response) => response.json())\n    .then((data) => dispatch(\n      { type: 'FETCH_MILK_FLOAT_SHAKE_DRINKS', payload: data.drinks },\n    ));\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${OTHER_UNKNOWN_DRINKS}`)\n    .then((response) => response.json())\n    .then((data) => dispatch(\n      { type: 'FETCH_OTHER_UNKNOWN_DRINKS', payload: data.drinks },\n    ));\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=Cocoa')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: 'FETCH_COCOA_DRINKS', payload: data.drinks }));\n};\n\nexport default fetchDrinks;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"notFoundfundo\">\n        <div className=\"notFound\">\n          <h1> Not Found</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport copy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\nimport { Container, Image, Button } from 'react-bootstrap';\nimport shareIcon from '../images/shareIcon.svg';\nimport { addFoodToFavorite, fetchDrinkApiById, fetchFoodApiById,\n  getIngredientList, isFavoriteRecipe } from '../helpers';\nimport fav from '../images/blackHeartIcon.svg';\nimport notFav from '../images/whiteHeartIcon.svg';\n\nclass ReceitasEmProgresso extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ingredientList: [],\n      displayShareMesage: false,\n      favoriteRecipe: false,\n      disable: true,\n      currentRecipe: '',\n      isDone: '',\n    };\n    this.fetchDrinkRecipe = this.fetchDrinkRecipe.bind(this);\n    this.fetchFoodRecipe = this.fetchFoodRecipe.bind(this);\n    this.handleChangeChecked = this.handleChangeChecked.bind(this);\n    this.fetchApi = this.fetchApi.bind(this);\n    this.updateStorage = this.updateStorage.bind(this);\n    this.share = this.share.bind(this);\n    this.favoriteThisItem = this.favoriteThisItem.bind(this);\n    this.isDisable = this.isDisable.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  handleChangeChecked(event) {\n    const { isDone } = this.state;\n    const { name, checked } = event.target;\n    this.setState({ isDone: { ...isDone, [name]: checked } }, () => this.isDisable());\n  }\n\n  share() {\n    const { location } = window;\n    const { href } = location;\n    const retiraInProgressDoLink = -12;\n    const link = href.slice(0, retiraInProgressDoLink);\n    copy(link);\n    const SHOW_TIME = 3000;\n    this.setState({ displayShareMesage: true }, () => {\n      setTimeout(() => this.setState({ displayShareMesage: false }), SHOW_TIME);\n    });\n  }\n\n  fetchApi() {\n    const { match: { params: { id } } } = this.props;\n    const { location } = window;\n    const { href } = location;\n    if (href.includes('comida')) {\n      this.fetchFoodRecipe(id);\n    }\n    if (href.includes('bebida')) {\n      this.fetchDrinkRecipe(id);\n    }\n  }\n\n  async fetchDrinkRecipe(drinkId) {\n    const storage = JSON.parse(localStorage.getItem('isDone'));\n    const recipe = await fetchDrinkApiById(drinkId);\n    const ingredients = getIngredientList(recipe);\n    const arrIngredientes = Object.values(ingredients);\n    const isDone = storage || arrIngredientes.reduce((acc, crr) => {\n      acc = { ...acc, [crr.item]: false };\n      return acc;\n    }, {});\n\n    const isFavorite = isFavoriteRecipe(drinkId);\n    this.setState({\n      isDone,\n      ingredientList: arrIngredientes,\n      currentRecipe: recipe,\n      favoriteRecipe: isFavorite,\n    });\n    this.isDisable();\n  }\n\n  async fetchFoodRecipe(foodId) {\n    const storage = JSON.parse(localStorage.getItem('isDone'));\n    const recipe = await fetchFoodApiById(foodId);\n    const ingredients = getIngredientList(recipe);\n    const arrIngredientes = Object.values(ingredients);\n    const isDone = storage || arrIngredientes.reduce((acc, crr) => {\n      acc = { ...acc, [crr.item]: false };\n      return acc;\n    }, {});\n\n    const isFavorite = isFavoriteRecipe(foodId);\n    this.setState({\n      isDone,\n      ingredientList: arrIngredientes,\n      currentRecipe: recipe,\n      favoriteRecipe: isFavorite,\n    });\n    this.isDisable();\n  }\n\n  favoriteThisItem() {\n    let variavel = '';\n    const { currentRecipe } = this.state;\n    const { location } = window;\n    const { href } = location;\n    if (href.includes('comida')) {\n      variavel = 'comida';\n    }\n    if (href.includes('bebida')) {\n      variavel = 'bebida';\n    }\n\n    const done = addFoodToFavorite(currentRecipe, variavel);\n    this.setState({ favoriteRecipe: done });\n  }\n\n  inputCards() {\n    const { ingredientList, isDone, displayShareMesage,\n      favoriteRecipe, disable, currentRecipe } = this.state;\n    const { history } = this.props;\n    let thumb = '';\n    let h1 = '';\n    if (history.location.pathname.includes('bebida')) {\n      thumb = currentRecipe.strDrinkThumb;\n      h1 = currentRecipe.strDrink;\n    } else {\n      thumb = currentRecipe.strMealThumb;\n      h1 = currentRecipe.strMeal;\n    }\n    return (\n      <div>\n        <Container>\n          <center>\n            <h1 data-testid=\"recipe-title\">{h1}</h1>\n            <Image\n              data-testid=\"recipe-photo\"\n              alt=\"receita-em-progresso\"\n              src={ thumb }\n              className=\"linkImage\"\n            />\n          </center>\n          <button\n            className=\"recipe-button\"\n            type=\"button\"\n            onClick={ () => this.share() }\n          >\n            <img\n              alt=\"card\"\n              data-testid=\"share-btn\"\n              src={ shareIcon }\n            />\n            {' '}\n          </button>\n          { displayShareMesage ? <p className=\"alert\">Link copiado!</p> : <div />}\n          <button\n            className=\"recipe-button\"\n            type=\"button\"\n            onClick={ this.favoriteThisItem }\n          >\n            <img\n              src={ favoriteRecipe ? fav : notFav }\n              alt=\"share\"\n              data-testid=\"favorite-btn\"\n            />\n          </button>\n          <p data-testid=\"recipe-category\" />\n          {}\n          {ingredientList.map((obj, index) => (\n            <div key={ index }>\n\n              {' '}\n              <label\n                htmlFor={ obj.item }\n                className={ isDone[obj.item] ? 'checkboxInProgressChecked' : 'nunCheck' }\n                data-testid={ `${index}-ingredient-step` }\n              >\n                {obj.item}\n                :\n                {' '}\n                {obj.quantity}\n                <input\n                  name={ obj.item }\n                  // className=\"checkboxInProgress\"\n                  type=\"checkbox\"\n                  id={ obj.item }\n                  checked={ isDone[obj.item] }\n                  onChange={ (event) => this.handleChangeChecked(event) }\n                />\n              </label>\n              {' '}\n\n            </div>\n\n          ))}\n          <p data-testid=\"instructions\" />\n          <Button\n            block\n            className=\"default-button\"\n            type=\"button\"\n            data-testid=\"finish-recipe-btn\"\n            disabled={ disable }\n            onClick={ () => history.push('/receitas-feitas') }\n          >\n            Finish\n          </Button>\n          <br />\n          <br />\n        </Container>\n      </div>\n    );\n  }\n\n  updateStorage() {\n    const { isDone } = this.state;\n    if (!isDone) return;\n    localStorage.setItem('isDone', JSON.stringify(isDone));\n  }\n\n  isDisable() {\n    const { isDone } = this.state;\n    if (isDone === '') return;\n    const str = JSON.stringify(isDone);\n    if (str.includes('false')) {\n      this.setState({ disable: true });\n    } else {\n      this.setState({ disable: false });\n    }\n  }\n\n  render() {\n    this.updateStorage();\n    return (\n      <div>\n        {this.inputCards()}\n      </div>\n    );\n  }\n}\n\nReceitasEmProgresso.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  history: PropTypes.shape.isRequired,\n};\n\nexport default ReceitasEmProgresso;\n","import React, { Component } from 'react';\nimport { Button, Card, Carousel } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\n\nclass RecomendationCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      carouselIndex: 0,\n    };\n    this.handleCarousel = this.handleCarousel.bind(this);\n  }\n\n  handleCarousel(selectedIndex) {\n    this.setState({ carouselIndex: selectedIndex });\n  }\n\n  render() {\n    const { carouselIndex } = this.state;\n    const { recomendations, redirectToPage } = this.props;\n    return (\n      <Carousel activeIndex={ carouselIndex } onSelect={ this.handleCarousel }>\n        {recomendations.map((recomendation, index) => {\n          const {\n            strMealThumb,\n            strMeal,\n            strCategory,\n            idMeal,\n            strDrinkThumb,\n            strDrink,\n            idDrink,\n            // strAlcoholic,\n          } = recomendation;\n          return (\n            <Carousel.Item key={ index }>\n              <Card\n                style={ { width: '18rem' } }\n                data-testid={ `${index}-recomendation-card` }\n              >\n                <Card.Img variant=\"top\" src={ strMealThumb || strDrinkThumb } />\n                <Card.Body>\n                  <Card.Title\n                    data-testid={ `${index}-recomendation-title` }\n                  >\n                    { strMeal || strDrink }\n                  </Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">\n                    { strCategory }\n                  </Card.Subtitle>\n                  <Button\n                    variant=\"primary\"\n                    onClick={ () => {\n                      if (idMeal) {\n                        return redirectToPage(`/comidas/${idMeal}`);\n                      }\n                      if (idDrink) {\n                        return redirectToPage(`/bebidas/${idDrink}`);\n                      }\n                    } }\n                  >\n                    Go somewhere\n                  </Button>\n\n                </Card.Body>\n              </Card>\n\n            </Carousel.Item>\n          );\n        })}\n      </Carousel>\n\n    );\n  }\n}\n\nRecomendationCard.propTypes = {\n  recomendations: PropTypes.arrayOf(PropTypes.object).isRequired,\n  redirectToPage: PropTypes.func.isRequired,\n};\n\nexport default withRouter(RecomendationCard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class IngredientList extends Component {\n  render() {\n    const { ingredientList } = this.props;\n    return (\n      Object.keys(ingredientList).map((e, i) => (\n        <ul key={ i }>\n          <li data-testid={ `${i}-ingredient-name-and-measure` }>\n            {`${ingredientList[e].item} - ${ingredientList[e].quantity}` }\n          </li>\n        </ul>\n      ))\n    );\n  }\n}\n\nIngredientList.propTypes = {\n  ingredientList: PropTypes.shape({\n    item: PropTypes.string,\n    quantity: PropTypes.string,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport { Redirect } from 'react-router';\nimport { Button, Container, Image } from 'react-bootstrap';\nimport fav from '../images/blackHeartIcon.svg';\nimport notFav from '../images/whiteHeartIcon.svg';\nimport share from '../images/shareIcon.svg';\nimport { addFoodToFavorite, continueRecipe, fetchFoodApiById, fetchDrinkRecomendation,\n  getIngredientList, isFavoriteRecipe, recipeIsDone } from '../helpers';\nimport RecomendationCard from './RecomendationCard';\nimport './generico.css';\nimport IngredientList from './IngredientList';\n\nclass GenericoComidas extends Component {\n  constructor() {\n    super();\n    this.state = {\n      redirectTo: '',\n      currentRecipe: '',\n      currentVideo: '',\n      ingredientList: {},\n      recomendations: [],\n      isThisRecipeDone: false,\n      continueThisRecipe: false,\n      favoriteRecipe: false,\n    };\n    this.fetchFoodRecipe = this.fetchFoodRecipe.bind(this);\n    this.redirectToPage = this.redirectToPage.bind(this);\n    this.fetchApi = this.fetchApi.bind(this);\n    this.favoriteThisItem = this.favoriteThisItem.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  fetchApi() {\n    this.setState({ redirectTo: '' });\n    const { match: { params: { id } } } = this.props;\n    this.fetchFoodRecipe(id);\n  }\n\n  async fetchFoodRecipe(foodId) {\n    const recipe = await fetchFoodApiById(foodId);\n    const ingredients = getIngredientList(recipe);\n    const recomendation = await fetchDrinkRecomendation();\n    const youtubeVideo = recipe.strYoutube.replace('watch?v=', 'embed/');\n    const finishedRechipe = recipeIsDone(foodId);\n    const alreadyStartedThisRecipe = continueRecipe(foodId, 'comidas');\n    const isFavorite = isFavoriteRecipe(foodId);\n    this.setState({\n      ingredientList: ingredients,\n      recomendations: recomendation,\n      currentVideo: youtubeVideo,\n      currentRecipe: recipe,\n      displayShareMesage: false,\n      isThisRecipeDone: finishedRechipe,\n      continueThisRecipe: alreadyStartedThisRecipe,\n      favoriteRecipe: isFavorite,\n    });\n  }\n\n  share() {\n    copy(window.location);\n    const SHOW_TIME = 3000;\n    this.setState({ displayShareMesage: true }, () => {\n      setTimeout(() => this.setState({ displayShareMesage: false }), SHOW_TIME);\n    });\n  }\n\n  redirectToPage(page) {\n    this.setState({ redirectTo: page });\n  }\n\n  favoriteThisItem() {\n    const { currentRecipe } = this.state;\n    const done = addFoodToFavorite(currentRecipe, 'comida');\n    this.setState({ favoriteRecipe: done });\n  }\n\n  render() {\n    const { currentRecipe, currentVideo, isThisRecipeDone,\n      ingredientList, recomendations, displayShareMesage,\n      continueThisRecipe, redirectTo, favoriteRecipe } = this.state;\n    const { match: { params: { id } } } = this.props;\n\n    if (redirectTo) {\n      return <Redirect to={ redirectTo } />;\n    }\n\n    return (\n      <div>\n        <Container>\n          <center>\n            <Image\n              src={ currentRecipe.strMealThumb }\n              alt=\"\"\n              className=\"linkImage\"\n              data-testid=\"recipe-photo\"\n            />\n            <h1 data-testid=\"recipe-title\">\n              {currentRecipe.strMeal}\n            </h1>\n            {currentRecipe.strDrink && <h2>{}</h2>}\n            <span data-testid=\"recipe-category\">\n              {currentRecipe.strCategory}\n            </span>\n            <button\n              className=\"recipe-button\"\n              type=\"button\"\n              onClick={ () => this.share() }\n            >\n              <img\n                src={ share }\n                alt=\"share\"\n                data-testid=\"share-btn\"\n              />\n            </button>\n            <button\n              className=\"recipe-button\"\n              type=\"button\"\n              onClick={ this.favoriteThisItem }\n            >\n              <img\n                src={ favoriteRecipe ? fav : notFav }\n                alt=\"share\"\n                data-testid=\"favorite-btn\"\n              />\n            </button>\n\n          </center>\n          {displayShareMesage && <span>Link copiado!</span>}\n          <h4>Ingredientes</h4>\n          {ingredientList && <IngredientList ingredientList={ ingredientList } />}\n          <div data-testid=\"instructions\">{currentRecipe.strInstructions}</div>\n          {window.location.href.includes('comidas')\n         && (\n           <center>\n             <iframe\n               title=\"video\"\n               className=\"linkVideo\"\n               src={ currentVideo }\n               data-testid=\"video\"\n             />\n           </center>)}\n          {recomendations\n              && <RecomendationCard\n                recomendations={ recomendations }\n                redirectToPage={ this.redirectToPage }\n              />}\n          {!isThisRecipeDone\n        && (\n          <Button\n            block\n            className=\"default-button green\"\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            onClick={ () => {\n              this.redirectToPage(`/comidas/${id}/in-progress`);\n            } }\n          >\n            {continueThisRecipe ? 'Continuar Receita' : 'Iniciar receita'}\n          </Button>\n        )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nGenericoComidas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default GenericoComidas;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\nimport { Redirect } from 'react-router';\nimport { Button, Container, Image } from 'react-bootstrap';\nimport fav from '../images/blackHeartIcon.svg';\nimport notFav from '../images/whiteHeartIcon.svg';\nimport share from '../images/shareIcon.svg';\nimport { addFoodToFavorite, continueRecipe, fetchDrinkApiById, fetchFoodRecomendation,\n  getIngredientList, isFavoriteRecipe, recipeIsDone } from '../helpers';\nimport RecomendationCard from './RecomendationCard';\nimport './generico.css';\nimport IngredientList from './IngredientList';\n\nclass GenericoBebidas extends Component {\n  constructor() {\n    super();\n    this.state = {\n      redirectTo: '',\n      currentRecipe: {},\n      ingredientList: {},\n      recomendations: [],\n      isThisRecipeDone: false,\n      continueThisRecipe: false,\n      favoriteRecipe: false,\n    };\n    this.redirectToPage = this.redirectToPage.bind(this);\n    this.fetchApi = this.fetchApi.bind(this);\n    this.favoriteThisItem = this.favoriteThisItem.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  fetchApi() {\n    const { match: { params: { id } } } = this.props;\n    this.fetchDrinkRecipe(id);\n  }\n\n  async fetchDrinkRecipe(drinkId) {\n    const recipe = await fetchDrinkApiById(drinkId);\n    const ingredients = getIngredientList(recipe);\n    const recomendation = await fetchFoodRecomendation();\n    const finishedRechipe = recipeIsDone(drinkId);\n    const alreadyStartedThisRecipe = continueRecipe(drinkId, 'bebidas');\n    const isFavorite = isFavoriteRecipe(drinkId);\n    this.setState({\n      ingredientList: ingredients,\n      recomendations: recomendation,\n      currentRecipe: recipe,\n      isThisRecipeDone: finishedRechipe,\n      continueThisRecipe: alreadyStartedThisRecipe,\n      favoriteRecipe: isFavorite,\n    });\n  }\n\n  share() {\n    copy(window.location);\n    const SHOW_TIME = 3000;\n    this.setState({ displayShareMesage: true }, () => {\n      setTimeout(() => this.setState({ displayShareMesage: false }), SHOW_TIME);\n    });\n  }\n\n  redirectToPage(page) {\n    this.setState({ redirectTo: page });\n  }\n\n  favoriteThisItem() {\n    const { currentRecipe } = this.state;\n    const done = addFoodToFavorite(currentRecipe, 'bebida');\n    this.setState({ favoriteRecipe: done });\n  }\n\n  render() {\n    const { currentRecipe, isThisRecipeDone,\n      ingredientList, recomendations, displayShareMesage,\n      continueThisRecipe, redirectTo, favoriteRecipe } = this.state;\n    const { match: { params: { id } } } = this.props;\n\n    if (redirectTo) {\n      return <Redirect push to={ redirectTo } />;\n    }\n\n    return (\n      <div>\n        <Container>\n          <center>\n            <Image\n              src={ currentRecipe.strDrinkThumb }\n              alt=\"\"\n              data-testid=\"recipe-photo\"\n              className=\"linkImage\"\n            />\n            <h1 data-testid=\"recipe-title\">\n              {currentRecipe.strDrink}\n            </h1>\n            {currentRecipe.strDrink && <h2>{}</h2>}\n            <span data-testid=\"recipe-category\">\n              {currentRecipe.strAlcoholic}\n            </span>\n            <button\n              className=\"recipe-button\"\n              type=\"button\"\n              onClick={ () => this.share() }\n            >\n              <img\n                src={ share }\n                alt=\"share\"\n                data-testid=\"share-btn\"\n              />\n            </button>\n            <button\n              className=\"recipe-button\"\n              type=\"button\"\n              onClick={ this.favoriteThisItem }\n            >\n              <img\n                src={ favoriteRecipe ? fav : notFav }\n                alt=\"share\"\n                data-testid=\"favorite-btn\"\n              />\n            </button>\n\n          </center>\n          {displayShareMesage && <span>Link copiado!</span>}\n          <h2>Ingredientes</h2>\n          {ingredientList && <IngredientList ingredientList={ ingredientList } />}\n          <div data-testid=\"instructions\">{currentRecipe.strInstructions}</div>\n          {recomendations\n              && <RecomendationCard\n                recomendations={ recomendations }\n                redirectToPage={ this.redirectToPage }\n              />}\n          {!isThisRecipeDone\n        && (\n          <Button\n            block\n            className=\"default-button green\"\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            onClick={ () => {\n              this.redirectToPage(`/bebidas/${id}/in-progress`);\n            } }\n          >\n            {continueThisRecipe ? 'Continuar Receita' : 'Iniciar receita'}\n          </Button>\n        )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nGenericoBebidas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default GenericoBebidas;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Login from './pages/Login/Login';\nimport Comidas from './pages/Comidas';\nimport Bebidas from './pages/Bebidas';\nimport ExpÄºorar from './pages/Explorar';\nimport ComidasIngredientes from './pages/ComidasIngredientes';\nimport BebidasIngredientes from './pages/BebidasIngredientes';\nimport ExplorarPorArea from './pages/ExplorarPorArea';\nimport ExplorarComidas from './pages/ExplorarComidas';\nimport ExplorarBebidas from './pages/ExplorarBebidas';\nimport ExplorarBebidasIngredientes from './pages/ExplorarBebidasIngredientes';\nimport ExplorarComidasIngredientes from './pages/ExplorarComidasIngredientes';\nimport Perfil from './pages/Perfil';\nimport ReceitasFeitas from './pages/ReceitasFeitas';\nimport ReceitasFavoritas from './pages/ReceitasFavoritas';\nimport { fetchCategories as fetchCategoriesAction }\n  from './store/actions/categories.actions';\nimport { fetchMeals as fetchMealsAction }\n  from './store/actions/meals.action';\nimport { fetchDrinks as fetchDrinksAction } from './store/actions/drinks.actions';\nimport NotFound from './pages/NotFound';\n// import ReceitasBebidasEmProgresso from './pages/ReceitasBebidasEmProgresso';\nimport ReceitasEmProgresso from './pages/ReceitasEmProgresso';\nimport GenericoComidas from './components/GenericoComidas';\nimport GenericoBebidas from './components/GenericoBebidas';\n// import rockGlass from './images/rockGlass.svg';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { fetchCategories, fetchMeals, fetchDrinks } = this.props;\n    fetchCategories();\n    fetchMeals();\n    fetchDrinks();\n  }\n\n  render() {\n    // const { rota } = this.props;\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/KitchenMemories/\" component={ Login } />\n            <Route exact path=\"/comidas\" component={ Comidas } />\n            <Route exact path=\"/bebidas\" component={ Bebidas } />\n            <Route exact path=\"/explorar\" component={ ExpÄºorar } />\n            <Route exact path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n            <Route exact path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n            <Route exact path=\"/comidas/ingredientes\" component={ ComidasIngredientes } />\n            <Route exact path=\"/bebidas/ingredientes\" component={ BebidasIngredientes } />\n            <Route exact path=\"/explorar/comidas/area\" component={ ExplorarPorArea } />\n            <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } />\n            <Route exact path=\"/explorar/comidas\" component={ ExplorarComidas } />\n            {/* <Route component={ ExpÄºorar } /> */}\n            <Route exact path=\"/explorar/bebidas\" component={ ExplorarBebidas } />\n            <Route\n              exact\n              path=\"/explorar/bebidas/ingredientes\"\n              component={ ExplorarBebidasIngredientes }\n            />\n            <Route\n              exact\n              path=\"/explorar/comidas/ingredientes\"\n              component={ ExplorarComidasIngredientes }\n            />\n            <Route exact path=\"/perfil\" component={ Perfil } />\n            <Route\n              path=\"/comidas/:id/in-progress\"\n              component={ ReceitasEmProgresso }\n            />\n            <Route\n              path=\"/bebidas/:id/in-progress\"\n              component={ ReceitasEmProgresso }\n            />\n            <Route path=\"/comidas/:id\" component={ GenericoComidas } />\n            <Route path=\"/bebidas/:id\" component={ GenericoBebidas } />\n            <Route exact path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n            {/* <Route exact path={ rota } component={ Generico } /> */}\n            <Route component={ NotFound } />\n          </Switch>\n        </BrowserRouter>\n\n      </div>\n    );\n  }\n}\n\n// App.propTypes = {\n//   rota: PropTypes.string.isRequired,\n// };\nconst mapStateToProps = (state) => ({\n  rota: state.rota,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCategories: () => dispatch(fetchCategoriesAction()),\n  fetchMeals: () => dispatch(fetchMealsAction()),\n  fetchDrinks: () => dispatch(fetchDrinksAction()),\n});\n\nApp.propTypes = {\n  fetchCategories: PropTypes.func.isRequired,\n  fetchDrinks: PropTypes.func.isRequired,\n  fetchMeals: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// export default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\n  email: '',\n};\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  const { type, payload } = action;\n  switch (type) {\n  case 'USER_LOGIN':\n    return { ...state, email: payload };\n\n  default:\n    return state;\n  }\n}\n","const initialState = {\n  recipesCategories: [],\n  drinksCategories: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'FETCH_MEALS_CATEGORIES':\n    return {\n      ...state,\n      recipesCategories: action.payload,\n    };\n  case 'FETCH_DRINKS_CATEGORIES':\n    return {\n      ...state,\n      drinksCategories: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default reducer;\n","const initialState = {\n  meals: [],\n  Beef: [],\n  Breakfast: [],\n  Chicken: [],\n  Dessert: [],\n  Goat: [],\n  drinks: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'FETCH_MEALS':\n    return {\n      ...state,\n      meals: action.payload,\n    };\n  case 'FETCH_BEEF_MEALS':\n    return {\n      ...state,\n      Beef: action.payload,\n    };\n  case 'FETCH_BREAKFAST_MEALS':\n    return {\n      ...state,\n      Breakfast: action.payload,\n    };\n  case 'FETCH_CHICKEN_MEALS':\n    return {\n      ...state,\n      Chicken: action.payload,\n    };\n  case 'FETCH_DESSERT_MEALS':\n    return {\n      ...state,\n      Dessert: action.payload,\n    };\n  case 'FETCH_GOAT_MEALS':\n    return {\n      ...state,\n      Goat: action.payload,\n    };\n  case 'FETCH_DRINKS':\n    return {\n      ...state,\n      drinks: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default reducer;\n","const initialState = {\n  drinks: [],\n  ordinaryDrink: [],\n  cocktail: [],\n  milkFloatShake: [],\n  otherUnknown: [],\n  cocoa: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'FETCH_DRINKS':\n    return {\n      ...state,\n      drinks: action.payload,\n    };\n  case 'FETCH_ORDINARY_DRINKS':\n    return {\n      ...state,\n      ordinaryDrink: action.payload,\n    };\n  case 'FETCH_COCKTAIL_DRINKS':\n    return {\n      ...state,\n      cocktail: action.payload,\n    };\n  case 'FETCH_MILK_FLOAT_SHAKE_DRINKS':\n    return {\n      ...state,\n      milkFloatShake: action.payload,\n    };\n  case 'FETCH_OTHER_UNKNOWN_DRINKS':\n    return {\n      ...state,\n      otherUnknown: action.payload,\n    };\n  case 'FETCH_COCOA_DRINKS':\n    return {\n      ...state,\n      cocoa: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default reducer;\n","const INITIAL_STATE = {};\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  const { type, payload } = action;\n  switch (type) {\n  case 'UPDATE_FAVORITES':\n    return payload;\n\n  default:\n    return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport example from './reducers/example.reducer';\nimport user from './reducers/user.reducer';\nimport categories from './reducers/categories.reducer';\nimport meals from './reducers/meals.reducer';\nimport drinks from './reducers/drinks.reducer';\nimport favoriteRecipes from './reducers/favoriteRecipes.reducer';\n\nconst rootReducer = combineReducers({\n  example,\n  user,\n  categories,\n  meals,\n  drinks,\n  favoriteRecipes,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","const INITIAL_STATE = null;\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  const { type, payload } = action;\n  switch (type) {\n  case 'UPDATE_DATA':\n    return payload;\n\n  default:\n    return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}